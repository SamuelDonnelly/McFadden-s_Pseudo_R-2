knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, options(scipen = 999))
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, options(scipen = 999))
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, options(scipen = 999))
ggplot(data, aes(x = x, y = y, color = interview)) +
geom_point() +
labs(title = "Test",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = "interview")) +
geom_point() +
labs(title = "Test",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = y)) +
geom_point() +
labs(title = "Test",
x = "Predictor",
y = "Interview")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, options(scipen = 999))
library(tidyr)
library(ggplot2)
library(rms)
x <- c(2.06, -2.55, -2.65, 2.99, 3.55, -1.33, -2.55, 3.22, 2.88, 3.99, 2.11, 3.11, 2.33, 3.00)
y <- c(1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1)
data <- tibble(x, y)
ID <- c(1:nrow(data))
data <- tibble(ID, x, y)
head(data)
model <- glm(y ~ x, family = "binomial")
model
null_model <- glm(y ~ 1, family = "binomial") # Can be used to find McFadden's Pseudo R^2, but I end up using the lrm function in the rms package.
summary(model) #Look at residuals next time
ggplot(data, aes(x = x, y = y, color = y)) +
geom_point() +
labs(title = "Test",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x)) +
geom_point() +
labs(title = "Test",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x)) +
geom_point() +
geom_jitter() +
labs(title = "Test",
x = "Predictor",
y = "Interview")
?geom_jitter
## Inspect Model
```{r}
summary(model) #Look at residuals next time
```
f <- ggplot()
## Make awful graph
```{r}
ggplot(data, aes(x = x, y = y, color = x)) +
geom_point() +
geom_jitter() +
labs(title = "Test",
x = "Predictor",
y = "Interview")
```
## Inspect Model
```{r}
summary(model) #Look at residuals next time
```
f <- ggplot()
## Make awful graph
```{r}
ggplot(data, aes(x = x, y = y, color = x)) +
geom_point() +
geom_jitter() +
labs(title = "Test",
x = "Predictor",
y = "Interview")
```
ggplot(data, aes(x = x, y = y, color = x)) +
geom_point() +
labs(title = "Test",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x)) +
geom_point() +
labs(title = "Test",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x)) +
geom_smooth() +
labs(title = "Test",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x)) +
geom_histogram() +
labs(title = "Test",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x)) +
geom_contour() +
labs(title = "Test",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x)) +
geom_count() +
labs(title = "Test",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x)) +
GeomLogticks() +
labs(title = "Test",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x)) +
geom_line() +
labs(title = "Test",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x)) +
geom_line() +
hline(y = 0.5)
ggplot(data, aes(x = x, y = y, color = x, size = y)) +
geom_line() +
labs(title = "Test",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x, size = y)) +
geom_curve() +
labs(title = "Test",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x, size = y)) +
geom_point() +
labs(title = "Test",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x, y size = y)) +
ggplot(data, aes(x = x, y = y, color = x, size = y)) +
geom_point() +
labs(title = "Test",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x, size = x)) +
geom_point() +
labs(title = "Test",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x, size = x)) +
geom_smooth(method = "glm") +
labs(title = "Test",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x, size = x)) +
geom_smooth(method = "glm", method.args = list(family = "binomial"),
se = FALSE) +
labs(title = "Test",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x, size = x)) +
geom_point() +
labs(title = "Test",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x, size = x)) +
geom_point() +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x, size = y)) +
geom_point() +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = y, size = x)) +
geom_point() +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = y, size = x)) +
geom_point(alpha = .5) +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = y)) +
geom_point(alpha = .5) +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x)) +
geom_point(alpha = .5) +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x, size = y)) +
geom_point(alpha = .5, shape = x) +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x, size = y)) +
geom_point(alpha = .5, shape = y) +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x, size = y)) +
geom_point(alpha = .5, stroke = x) +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x, size = y)) +
geom_point(alpha = .5, stroke = y) +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x, size = y)) +
geom_point(alpha = .5) +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = y, size = x)) +
geom_point(alpha = .5) +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = y, size = x)) +
geom_point(alpha = .5, color = x) +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = y, size = x)) +
geom_point(alpha = .5, color = factor(cyl)) +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = y, size = x)) +
geom_point(alpha = .5, color = factor(x)) +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = y, size = x)) +
geom_point(alpha = .5, color = factor(y)) +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = y, size = x)) +
geom_point(alpha = .5) +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x, size = y)) +
geom_point(alpha = .5) +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x, size = x)) +
geom_point(alpha = .5) +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x, size = x)) +
geom_smooth(alpha = .5) +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x, size = x)) +
geom_point(alpha = .5) +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
x <- c(0.22, -0.55, 2.06, -2.55, -2.65, 2.99, 3.55, -1.33, -2.55, 3.22, 2.88, 3.99, 2.11, 3.11, 2.33, 3.00)
y <- c(1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1)
data <- tibble(x, y)
ID <- c(1:nrow(data))
data <- tibble(ID, x, y)
model <- glm(y ~ x, family = "binomial")
model
null_model <- glm(y ~ 1, family = "binomial") # Can be used to find McFadden's Pseudo R^2, but I end up using the lrm function in the rms package.
summary(model) #Look at residuals next time
lrm(y ~ x)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, options(scipen = 999))
lrm(y ~ x)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, options(scipen = 999))
ggplot(data, aes(x = x, y = y, color = x, size = x)) +
geom_point(alpha = .5) +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x, size = x)) +
geom_point(alpha = .5, hline = TRUE) +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x, size = x)) +
geom_point(alpha = .5, colours = TRUE) +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x, size = x)) +
geom_point(alpha = .5, colour = "red") +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, size = x)) +
geom_point(alpha = .5, colour = "red") +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y)) +
geom_point(alpha = .5, colour = "red", size = 3) +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, colour = "red")) +
geom_point(alpha = .5, size = 3) +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, colour = "cyan")) +
geom_point(alpha = .5, size = 3) +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = "blue")) +
geom_point(alpha = .5, size = 3) +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x)) +
geom_point(alpha = .5, size = 3) +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(data, aes(x = x, y = y, color = x)) +
geom_point(alpha = .5, size = 5) +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
residuals.glm(model)
get_residuals(model)
resid(model)
ggplot(data, aes(x = x, y = y, color = x)) +
geom_point(alpha = .5, size = 5) +
labs(title = "Test Visualization",
x = "Predictor",
y = "Interview")
ggplot(res, aes(x = x, y = res)) +
geom_point()
res <- resid(model)
ggplot(res, aes(x = x, y = res)) +
geom_point()
tibble(x, res)
res <- resid(model)
resframe <- tibble(x, res)
ggplot(resframe, aes(x = x, y = res)) +
geom_point()
ggplot(resframe, aes(x = x, y = res)) +
geom_point() +
labs(title = "Residuals",
x = "X",
y = "Y")
ggplot(resframe, aes(x = x, y = res)) +
geom_point() +
geom_hline() +
labs(title = "Residuals",
x = "X",
y = "Y")
ggplot(resframe, aes(x = x, y = res)) +
geom_point() +
geom_hline(aes(y = 0)) +
labs(title = "Residuals",
x = "X",
y = "Y")
ggplot(resframe, aes(x = x, y = res)) +
geom_point() +
geom_hline(yintercept = 0) +
labs(title = "Residuals",
x = "X",
y = "Y")
ggplot(resframe, aes(x = x, y = res)) +
geom_point() +
geom_hline(yintercept = 0, color = "blue") +
labs(title = "Residuals",
x = "X",
y = "Y")
ggplot(resframe, aes(x = x, y = res)) +
geom_point(size = 3) +
geom_hline(yintercept = 0, color = "blue") +
labs(title = "Residuals",
x = "X",
y = "Y")
